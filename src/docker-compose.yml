# Docker compose file for local development.
# Initialize your local environment variables either in your shell
# or in the ".env" file.
version: "3.7"
services:
  carts:
    container_name: carts
    depends_on:
      - ddb
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      - AWS_REGION
      - DDB_TABLE_CARTS
      - DDB_ENDPOINT_OVERRIDE
    build:
      context: ./carts
    networks:
      - dev-net
    ports:
      - "8003:80"

  ddb:
    image: amazon/dynamodb-local
    container_name: ddb
    command: -jar DynamoDBLocal.jar -port 3001
    networks:
      - dev-net
    ports:
      - 3001:3001

  products:
    container_name: products
    depends_on:
      - ddb
    environment:
      - AWS_PROFILE
      - AWS_DEFAULT_REGION
      - DDB_TABLE_PRODUCTS
      - DDB_TABLE_CATEGORIES
      - DDB_TABLE_PERSONALISED_PRODUCTS
      - CACHE_PERSONALISED_PRODUCTS
      - DDB_ENDPOINT_OVERRIDE
      - IMAGE_ROOT_URL
      - WEB_ROOT_URL
      - FLASK_CONFIG
      - COGNITO_USER_POOL_ID
      - COGNITO_USER_POOL_CLIENT_ID
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      - AWS_PERSONALIZE_TRACKING_ID
    volumes:
      - ~/.aws/:/root/.aws:ro
    build:
      context: ./products
    networks:
      - dev-net
    ports:
      - "8001:80"

  recommendations:
    container_name: recommendations
    depends_on:
      - products
    environment:
      - AWS_PROFILE
      - AWS_DEFAULT_REGION
      - PRODUCT_SERVICE_HOST
      - PRODUCT_SERVICE_PORT
      - OFFERS_SERVICE_HOST
      - OFFERS_SERVICE_PORT
      - AWS_XRAY_DAEMON_ADDRESS=xray:2000
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      - AWS_PERSONALIZE_V2_CAMPAIGN_ARN
      - AWS_PERSONALIZE_PROMOTION_ARN
      - AWS_PERSONALIZE_FILTER
      - AWS_PERSONALIZE_ITEM_POPULARITY_FILTER_ARN
      - AWS_PERSONALIZE_SIMILAR_ITEMS_CAMPAIGN_ARN
      - AWS_RERANKING_V2_CAMPAIGN_ARN
    volumes:
      - ~/.aws/:/root/.aws:ro
    build:
      context: ./recommendations
    networks:
      - dev-net
    ports:
      - "8005:80"

  users:
    container_name: users
    environment:
      - AWS_REGION
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
    build:
      context: ./users
    networks:
      - dev-net
    ports:
      - "8002:80"

  # This service has it's own .env file at src/web-ui/.env
  web-ui:
    container_name: web-ui
    build:
      context: ./web-ui
      target: production-stage
    networks:
      - dev-net
    ports:
      - "8080:80"
    volumes:
      - ../images:/usr/share/nginx/html/images:ro

  nginx:
    container_name: nginx-proxy
    image: nginx:latest
    networks:
      - dev-net
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - NGINX_SERVER_NAME
    depends_on:
      - web-ui
      - products
      - users
      - carts
      - recommendations

networks:
  dev-net:
    driver: bridge
